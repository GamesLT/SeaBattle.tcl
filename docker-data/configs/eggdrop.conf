set botnet-nick $::env(EGGDROP_BOTNET_NICK)
set mod-path "/usr/lib/eggdrop/modules/"
set help-path "/usr/share/eggdrop/help/"
set my-hostname [info hostname]
set protect-telnet $::env(EGGDROP_PROTECT_TELNET)
set dcc-sanitycheck $::env(EGGDROP_DCC_SANITY_CHECK)
set ident-timeout $::env(EGGDROP_IDENT_TIMEOUT)
set require-p $::env(EGGDROP_REQUIRE_PARTY)
set open-telnets $::env(EGGDROP_OPEN_TELNETS)
set stealth-telnets $::env(EGGDROP_STEALTH_TELNETS)
set use-telnet-banner $::env(EGGDROP_USE_TELNET_BANNER)
set connect-timeout $::env(EGGDROP_CONNECTION_TIMEOUT)
set dcc-flood-thr $::env(EGGDROP_DCC_FLOOD_THR)
set telnet-flood $::env(EGGDROP_TELNET_FLOOD)
set paranoid-telnet-flood $::env(EGGDROP_PARANOID_TELNET_FLOOD)
set resolve-timeout $::env(EGGDROP_RESOLVE_TIMEOUT)
set max-dcc $::env(EGGDROP_MAX_DCC)
set dcc-portrange $::env(EGGDROP_DCC_PORTRANGE)
set enable-simul $::env(EGGDROP_ENABLE_SIMUL)
set allow-dk-cmds $::env(EGGDROP_ALLOW_DK_CMDS)

foreach module [split $::env(EGGDROP_MODULES) " "] {
    loadmodule $module
}

foreach module [split $::env(EGGDROP_CHECK_MODULES) " "] {
    checkmodule $module
}

set nick $::env(EGGDROP_NICK)
set altnick $::env(EGGDROP_ALTNICK)
set admin $::env(EGGDROP_ADMIN)
set realname $::env(EGGDROP_REAL)
set shortnick $::env(EGGDROP_SHORTNICK)
set servers [split $::env(EGGDROP_SERVERS) " "]]

set logs_path "/var/logs/eggdrop"
set data_path "/root"
set src_dir "/srv/seabattle"

foreach channel [split $::env(EGGDROP_CHANNELS) " "] {
    channel add $channel {
        chanmode "+nt"
        idle-kick 0
        stopnethack-mode 0
    }
    channel set $channel +enforcebans +dynamicbans +userbans
    channel set $channel +dynamicexempts +userexempts +dynamicinvites +userinvites
    channel set $channel -autoop -bitch +protectops +protectfriends +dontkickops
    channel set $channel +greet +statuslog
    channel set $channel +revenge +autovoice
    channel set $channel -secret +shared +cycle
    channel set $channel -inactive -seen +nodesynch
    logfile jpk $channel "$logs_path/channel-$channel.log"
}

set net-type $::env(EGGDROP_NET_TYPE)

if { $::env(EGGDROP_LISTEN_USERS_PORT) == $::env(EGGDROP_LISTEN_BOTS_PORT) } {
    listen $::env(EGGDROP_LISTEN_USERS_PORT) all
} else {
    listen $::env(EGGDROP_LISTEN_USERS_PORT) users
    listen $::env(EGGDROP_LISTEN_BOTS_PORT) bots
}

set owners $::env(EGGDROP_OWNERS)

set userfile "$data_path/eggdrop.user"
set chanfile "$data_path/eggdrop.chan"
set temp-path "/tmp"
logfile msbxco * "$logs_path/main.log"

set init-server {
    putserv "MODE $nick +B-ws"
}

foreach sys_script [split $::env(EGGDROP_SYSTEM_SCRIPTS) " "] {
    source "/usr/share/eggdrop/scripts/$sys_script.tcl"
}

foreach help_file [split $::env(EGGDROP_SYSTEM_HELPS) " "] {
    loadhelp "$help_file.help"
}

# Here we including our game!!!!
source "$src_dir/seabattle_main.tcl"
